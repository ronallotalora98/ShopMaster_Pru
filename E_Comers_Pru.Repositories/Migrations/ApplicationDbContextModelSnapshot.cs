// <auto-generated />
using System;
using E_Comers_Pru.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Comers_Pru.Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CAT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CAT_CODIGO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CAT_NOMBRE");

                    b.HasKey("Id");

                    b.ToTable("SM_CATEGORIA");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.DetailOrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DOR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("DOR_CANTIDAD");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int")
                        .HasColumnName("DOR_ORDEN_ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("DOR_PRODUCTO_ID");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int")
                        .HasColumnName("DOR_PRECIO_UNITARIO");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.HasIndex("ProductId");

                    b.ToTable("SM_DETALLE_ORDEN");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRO_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRO_CONDICION");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRO_DESCRIPCION");

                    b.Property<int>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("PRO_DESCUENTO");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PRO_FECHA_FIN");

                    b.Property<int>("OfferTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PRO_TIPO_PROMOCION_ID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PRO_FECHA_INICIO");

                    b.HasKey("Id");

                    b.HasIndex("OfferTypeId");

                    b.ToTable("SM_PROMOCION");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OfferTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TPR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TPR_CODIGO");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TPR_DESCRIPCION");

                    b.HasKey("Id");

                    b.ToTable("SM_TIPO_PROMOCION");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OrdenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ORD_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrdenDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ORD_FECHA_ORDEN");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ORD_ESTADO");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("ORD_TOTAL");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("ORD_USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SM_ORDEN");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRO_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CATEGORIA_ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRO_DESCRIPCION");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRO_IMAGEN");

                    b.Property<int>("Inventory")
                        .HasColumnType("int")
                        .HasColumnName("PRO_INVENTARIO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRO_NOMBRE");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRO_PRECIO");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SM_PRODUCTO");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.RolEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROL_CODIGO");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROL_DESCRIPCION");

                    b.HasKey("Id");

                    b.ToTable("SM_ROL");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USU_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USU_CORREO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USU_NOMBRE");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USU_CLAVE");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("USU_ROL_ID");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("SM_USUARIO");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.DetailOrderEntity", b =>
                {
                    b.HasOne("E_Comers_Pru.Common.Entities.OrdenEntity", "Orden")
                        .WithMany("DetailOrders")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Comers_Pru.Common.Entities.ProductEntity", "Product")
                        .WithMany("detailOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OfferEntity", b =>
                {
                    b.HasOne("E_Comers_Pru.Common.Entities.OfferTypeEntity", "OfferType")
                        .WithMany("Offers")
                        .HasForeignKey("OfferTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferType");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OrdenEntity", b =>
                {
                    b.HasOne("E_Comers_Pru.Common.Entities.UserEntity", "User")
                        .WithMany("PurchaseHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.ProductEntity", b =>
                {
                    b.HasOne("E_Comers_Pru.Common.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.UserEntity", b =>
                {
                    b.HasOne("E_Comers_Pru.Common.Entities.RolEntity", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OfferTypeEntity", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.OrdenEntity", b =>
                {
                    b.Navigation("DetailOrders");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.ProductEntity", b =>
                {
                    b.Navigation("detailOrders");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.RolEntity", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("E_Comers_Pru.Common.Entities.UserEntity", b =>
                {
                    b.Navigation("PurchaseHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
